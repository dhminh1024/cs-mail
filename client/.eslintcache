[{"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/index.js":"1","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/App.js":"2","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/store.js":"3","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/components/PublicNavbar.js":"4","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/NotFoundPage.js":"5","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/components/AlertMsg.js":"6","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/RegisterPage.js":"7","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/HomePage.js":"8","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/LoginPage.js":"9","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/reducers/index.js":"10","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/actions/auth.actions.js":"11","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/reducers/auth.reducer.js":"12","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/apiService.js":"13","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/constants/auth.constants.js":"14"},{"size":270,"mtime":1608622390777,"results":"15","hashOfConfig":"16"},{"size":830,"mtime":1608622390779,"results":"17","hashOfConfig":"16"},{"size":344,"mtime":1608622390777,"results":"18","hashOfConfig":"16"},{"size":1339,"mtime":1608623327530,"results":"19","hashOfConfig":"16"},{"size":359,"mtime":1608622376551,"results":"20","hashOfConfig":"16"},{"size":322,"mtime":1608622376551,"results":"21","hashOfConfig":"16"},{"size":3732,"mtime":1608622390778,"results":"22","hashOfConfig":"16"},{"size":3451,"mtime":1608625460984,"results":"23","hashOfConfig":"16"},{"size":3082,"mtime":1608622743921,"results":"24","hashOfConfig":"16"},{"size":141,"mtime":1608622390778,"results":"25","hashOfConfig":"16"},{"size":1868,"mtime":1608625778284,"results":"26","hashOfConfig":"16"},{"size":1435,"mtime":1608625089028,"results":"27","hashOfConfig":"16"},{"size":960,"mtime":1608695644758,"results":"28","hashOfConfig":"16"},{"size":717,"mtime":1608624997184,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1q6npvg",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/index.js",[],["62","63"],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/App.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/store.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/components/PublicNavbar.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/NotFoundPage.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/components/AlertMsg.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/RegisterPage.js",["64","65"],"import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Form, Button, Container, Row, Col } from \"react-bootstrap\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport authActions from \"../redux/actions/auth.actions\";\n\nconst RegisterPage = () => {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const [errors, setErrors] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const loading = useSelector((state) => state.auth.loading);\n\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, email, password, password2 } = formData;\n    if (password !== password2) {\n      setErrors({ ...errors, password2: \"Passwords do not match\" });\n      return;\n    }\n    dispatch(authActions.register({name, email, password}));\n  };\n\n  return (\n    <Container>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          <div className=\"text-center mb-3\">\n            <h1 className=\"text-primary\">Sign Up</h1>\n            <p className=\"lead\">\n              Create Your Account\n            </p>\n          </div>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Name\"\n                name=\"name\"\n                value={formData.name}\n                onChange={handleChange}\n              />\n              {errors.name && (\n                <small className=\"form-text text-danger\">{errors.name}</small>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Email Address\"\n                name=\"email\"\n                value={formData.email}\n                onChange={handleChange}\n              />\n              {errors.email && (\n                <small className=\"form-text text-danger\">{errors.email}</small>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Password\"\n                name=\"password\"\n                value={formData.password}\n                onChange={handleChange}\n              />\n              {errors.password && (\n                <small className=\"form-text text-danger\">\n                  {errors.password}\n                </small>\n              )}\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                name=\"password2\"\n                value={formData.password2}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            {loading ? (\n              <Button\n                className=\"btn-block\"\n                variant=\"primary\"\n                type=\"button\"\n                disabled\n              >\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </Button>\n            ) : (\n              <Button className=\"btn-block\" type=\"submit\" variant=\"primary\">\n                Register\n              </Button>\n            )}\n\n            <p>\n              Already have an account? <Link to=\"/login\">Sign In</Link>\n            </p>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default RegisterPage;","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/HomePage.js",["66"],"import React, { useState, useEffect } from \"react\";\nimport { Button, Col, Container, Form, Row, Table } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport authActions from \"../redux/actions/auth.actions\";\n\nconst HomePage = () => {\n  const [formData, setFormData] = useState({\n    to: \"\",\n    title: \"\",\n    content: \"\",\n  });\n  const dispatch = useDispatch();\n  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);\n  const currentUser = useSelector((state) => state.auth.user);\n  const messages = useSelector((state) => state.auth.messages);\n  const loading = useSelector((state) => state.auth.loading);\n\n  const currentUserId = currentUser._id;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { to, title, content } = formData;\n    if (currentUserId)\n      dispatch(\n        authActions.sendMessage({\n          from: currentUserId,\n          to,\n          title,\n          body: content,\n        })\n      );\n  };\n\n  const handleChange = (e) =>\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  useEffect(() => {\n    if (currentUserId) dispatch(authActions.getReceivedMessages(currentUserId));\n  }, [dispatch, currentUserId]);\n\n  return (\n    <Container>\n      <Row>\n        <Col md={{ span: 6, offset: 3 }}>\n          <Form onSubmit={handleSubmit}>\n            <Form.Group>\n              <Form.Control\n                type=\"email\"\n                required\n                placeholder=\"Receiver\"\n                name=\"to\"\n                value={formData.to}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Title\"\n                name=\"title\"\n                value={formData.title}\n                onChange={handleChange}\n              />\n            </Form.Group>\n            <Form.Group>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Content\"\n                name=\"content\"\n                value={formData.content}\n                onChange={handleChange}\n              />\n            </Form.Group>\n\n            {loading ? (\n              <Button\n                className=\"btn-block\"\n                variant=\"primary\"\n                type=\"button\"\n                disabled\n              >\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </Button>\n            ) : (\n              <Button className=\"btn-block\" type=\"submit\" variant=\"primary\">\n                Submit\n              </Button>\n            )}\n          </Form>\n        </Col>\n      </Row>\n      <hr />\n      <Row>\n        <Col>\n          <Table striped bordered hover>\n            <thead>\n              <tr>\n                <th>#</th>\n                <th>From</th>\n                <th>Title</th>\n              </tr>\n            </thead>\n            <tbody>\n              {messages.map((message, index) => (\n                <tr key={message._id}>\n                  <td>{index + 1}</td>\n                  <td>{message.from.email}</td>\n                  <td>{message.title}</td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default HomePage;\n","/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/pages/LoginPage.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/reducers/index.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/actions/auth.actions.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/reducers/auth.reducer.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/apiService.js",[],"/Users/minhdh/CoderSchool/FTW/demo/week8/cs-mail/client/src/redux/constants/auth.constants.js",[],["67","68"],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":1,"column":27,"nodeType":"75","messageId":"76","endLine":1,"endColumn":36},{"ruleId":"73","severity":1,"message":"77","line":23,"column":9,"nodeType":"75","messageId":"76","endLine":23,"endColumn":16},{"ruleId":"73","severity":1,"message":"78","line":13,"column":9,"nodeType":"75","messageId":"76","endLine":13,"endColumn":24},{"ruleId":"69","replacedBy":"79"},{"ruleId":"71","replacedBy":"80"},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'isAuthenticated' is assigned a value but never used.",["81"],["82"],"no-global-assign","no-unsafe-negation"]